<div class="page-width"> 
  <div class="search-listing-wrapper">
    <div class="search-listing-header2">
      <div class="search-selector">
        <select id="selectTopic" onchange="handleDropDownChange(event)"></select>
      </div>
      <div class="search-input">
        <input id="searchFAQ" type="text" placeholder="search" oninput="debouncedSearch(event)" />
      </div>
    </div>
 
    <div class="search-listing-body" id="searchListigBody" data-search-blocks-to-show="8">
     
    </div> 

    <div class="browse-categories" id="loadBtnDiv">
        <button id="loadMoreBtn"  >Load More</button>
    </div>
  </div>

</div>


<script>

var currentPage = 1;
var categoryID = "";

const loadMoreBtn = document.getElementById('loadMoreBtn');

function handleDropDownChange(event) {
    let topicID = document.getElementById('selectTopic').value;
    let filter = document.getElementById('searchFAQ').value;
    fetchFAQsByFilters(categoryID, filter, topicID);
  }

loadMoreBtn.addEventListener('click', () => {
  currentPage++;
  let topicsID = document.getElementById('selectTopic').value;
  let filter = document.getElementById('searchFAQ').value;
  fetchFAQsByFilters(categoryID, filter, topicsID, currentPage);
});



  function fetchFAQsByFilters(categoryID="", filter = "", topicsID = "",page=1) {
    const container = document.getElementById('searchListigBody');

    if(!container){
      console.error('searchListigBody wrapper container not found');
      return;
    }
    
    loadMoreBtn.style.display="none";

    if(page==1){
      emptyContainerHtml(container)
      
    }

    const loader=appendLoader(container)

    fetch(evenFloFAQURL + `faqs/getFilteredFaqs?filter=${filter}&page=${page}&category_id=${categoryID}&topics_id=${topicsID}`)
      .then(response => response.json())
      .then(data => {

        data?.results?.forEach((product) => {
          const popularCard = createPopularCardDivElement("popular-card");

          const faqsContent = getFAQContent(product?.products || []);

          const tags = getTagsArray(product?.tags || []);

          const tagsHtml = getTagsHtml(tags);

          popularCard.innerHTML = setFAQBlockInnerHtml(
            product?.topic?.name || "",
            product.question,
            faqsContent,
            product.answer,
            //product?.id,
            "",
            tagsHtml
          );

          container.appendChild(popularCard);
        });

        loadMoreBtn.style.display="block";
      })
      .catch(error => {
        console.error('Error fetching products:', error);
      })
      .finally(() => {
        if (loader) {
         hideLoader(loader);
         toggleAnswerBullet();
        }
      });
  }
</script>