{%- comment -%}
************************************
Digioh Product Recommendation Template

This template renders a list of products from a Digioh Product Recommendation Quiz

Possible places to edit tagged with "DIGIOH-OPTION"

URL Parameters:
  products : comma separated list of product handles
  show_hero : if set to 'true' will show the hero section, defaults to 'false'
  rowlen : the number of products to show per row, defaults to 3
  max_products : the maximum number of products to show, default to 12
  hide_oos : hide products that are out of stock, defaults to false
  add_to_cart : add to cart, with option selection, default to true

Required Snippets: 
  card-product-variant.liquid (digioh provided)
************************************
{%- endcomment -%}

{%- comment -%} Include Required CSS {%- endcomment -%}
{{ 'template-collection.css' | asset_url | stylesheet_tag }}
{{ 'component-loading-overlay.css' | asset_url | stylesheet_tag }}
{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}

{%- comment -%}
************************************
SECTION: Template Variables 
************************************
{%- endcomment -%}
{% assign queryString = '' %}
{% assign variants = "" | split: ',' %} {% comment %} variant ids to display, in order {% endcomment %}
{% assign show_hero = false %} {% comment %} show_hero Show the first recommended product on a single line {% endcomment %}
{% assign rowlen = 3 %} {% comment %} rowlen sets default number of products to display per row, aliased to rowlen {% endcomment %}
{% assign max_products = 12 %} {% comment %} max_products maximum  number of products to render {% endcomment %}
{% assign hide_oos = false %}  {% comment %} hide_oos if true will skip displaying products that are not currently available (out of stock) {% endcomment %}
{% assign add_to_cart = true %}     {% comment %} enable quick add on product item, defaults to true {% endcomment %}
{% assign my_custom_param = '' %}     {% comment %} debug used to display debug info. see SECTION: Set custom variables {% endcomment %}
{% assign debug = false %}     {% comment %} debug used to display debug info {% endcomment %}
{%- comment -%}
************************************
END SECTION:Template Variables 
************************************
{%- endcomment -%}

{%- comment -%}
************************************
SECTION: Url Parsing 
************************************
{%- endcomment -%}

{%- comment -%} Capture the content for header containing the tracking data {%- endcomment -%}
{%- capture contentForQuerystring -%}{{ content_for_header }}{%- endcapture -%}

{% comment %} Use string splitting to pull the value from content_for_header and apply some string clean up {% endcomment %}
{%- assign pageUrl = contentForQuerystring
  | split: '"pageurl":"'
  | last
  | split: '"'
  | first
  | split: '.myshopify.com'
  | last
  | replace: '\/', '/'
  | replace: '%20', ' '
  | replace: '\u0026', '&'
-%}
{% assign debug = false %}
{%- for i in (1..1) -%}
  {%- comment -%} If the string doesn't contain a ? then we have no querystring. Go no further {%- endcomment -%}
  {%- unless pageUrl contains '?' -%}{% break %}{%- endunless -%}

  {%- comment -%} Split the url at the ? to get all values after it {%- endcomment -%}
  {%- assign pageQuerystring = pageUrl | split: '?' | last -%}
  {%- assign parts = pageQuerystring | split: '&' -%}
  {% assign queryString = parts %}
  {%- for part in parts -%}
    {%- assign keyAndValue = part | split: '=' -%}
    {%- if keyAndValue.size > 1 -%}

      {% comment %} Set Template Variables {% endcomment %}
      {%- if keyAndValue[0] == 'show_hero' and keyAndValue[1] == 'true' -%}
        {%- assign show_hero = true  -%}
      {%- endif -%}
      {%- if keyAndValue[0] == 'hide_oos' and keyAndValue[1] == 'true' -%}
        {%- assign hide_oos = true -%}
      {%- endif -%}
      {%- if keyAndValue[0] == 'add_to_cart' -%}
        {%- if keyAndValue[1] == 'true' -%}
          {%- assign add_to_cart = true -%}
        {%- endif -%}
        {%- if keyAndValue[1] == 'false' -%}
          {%- assign add_to_cart = false -%}
        {%- endif -%}
      {%- endif -%}
      {%- if keyAndValue[0] == 'rowlen' or keyAndValue[0] == 'rowlenN' -%}
        {%- assign rowlen = keyAndValue[1] | plus: 0  -%}
      {%- endif -%}
      {%- if keyAndValue[0] == 'max_products' -%}
        {%- assign max_products = keyAndValue[1] | plus: 0 -%}
      {%- endif -%}
      {% if keyAndValue[0] == 'debug' %}
        {% assign debug = true %}
      {%- endif -%}
        {% comment %}
        process variant ids, end result is a variants array and a products array index aligned
        and in the order of recommendation
        {% endcomment %}
        {% if keyAndValue[0] == 'variants' %}
          {% assign url_variant_ids = keyAndValue[1] | url_decode | split: ',' %}
          {% comment %} {% assign variant_ids = '' %}build variant_ids as found ids {% endcomment %}
          {% assign found_variants = null | sort %}

          {% comment %} Look through products for matching variants {% endcomment %}
          {% paginate collections.all.products by 250 -%}
              {% for product in collections.all.products %}

                  {% for variant in product.variants %}
                      {% assign variant_id = variant.id | append: '' %}
                      {% if url_variant_ids contains variant_id %}
                          {% assign var_item = variant | sort %}
                          {% assign found_variants = found_variants | concat: var_item %}
                      {% endif %}
                  {% endfor %}

              {% endfor %}
          {%- endpaginate %}

          {% comment %}Variants are found, now we need to put them in the correct order {% endcomment %}
          {% assign variants = null | sort %}
          {% for var_id in url_variant_ids %}
              {% assign var_id_int = var_id | plus: 0 %}

              {% for variant in found_variants %}
                  {% if variant.id == var_id_int %}
                      {% assign variant_item = variant | sort %}
                      {% assign prod_item = product | sort %}
                      {% assign variants = variants | concat: variant_item %}
                      {% break %}
                  {% endif %}
              {% endfor %}

          {% endfor %}
      {%- endif -%}

      {%- comment -%}
      ************************************
      SECTION: Set custom params
      ************************************
      {%- endcomment -%}

      {%- if keyAndValue[0] == 'my_custom_param' -%}
        {%- assign my_custom_param = keyAndValue[1] | strip_html -%}
      {%- endif -%}

      {%- comment -%}
      ************************************
      END SECTION: Set custom params
      ************************************
      {%- endcomment -%}
    {%- endif -%}
  {%- endfor -%}
{%- endfor -%}


{%- comment -%}
************************************
END SECTION: Url Parsing 
************************************
{%- endcomment -%}

{% comment %} Conditional includes {% endcomment %}
{%- if add_to_cart -%}
  {{ 'quick-add.css' | asset_url | stylesheet_tag }}
  <script src="{{ 'quick-add.js' | asset_url }}" defer="defer"></script>
  <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
{%- endif -%}

{%- comment -%} Render Title {%- endcomment -%}
<div class="collection-hero"  style="justify-content: center;">
  <div class="collection-hero__inner page-width">
    <div class="collection-hero__text-wrapper">
      <h1 class="collection-hero__title">
        {%- comment -%}DIGIOH-OPTION: Hero Text - Edit this as desired {%- endcomment -%}
        Here are the recommendations for you!! 
        </h1>
      <div class="collection-hero__description rte"></div>
    </div>
  </div>
</div>
{%- comment -%}
************************************
SECTION: Display Recommended Products
************************************
{%- endcomment -%}

{% assign products_rendered_count = 0 %} {% comment %} local counter to keep track of how many products we have shown {% endcomment %}
{% assign products_rendered_in_row = 0 %} {% comment %} local counter to keep track of how many products we have shown for this row {% endcomment %}
{% assign current_row = 1 %} {% comment %} local counter to keep track of the current row {% endcomment %}
        
<div class="collection page-width">
  <div class="loading-overlay gradient"></div>
  <ul id="product-grid" class="grid product-grid grid--2-col-tablet-down grid--3-col-desktop" style="justify-content: center;" >

  {% comment %} Loop over the passed in products {% endcomment %}
  {%- for variant in variants -%}
    {% comment %} get product {% endcomment %}
    {% assign product = variant.product %}
  
    {% comment %} Check if we should skip this product because it is out of stock {% endcomment %}
    {% if hide_oos == true and (product.available == false or variant.available == false or variant.inventory_quantity < 1 ) %}
      {% continue %}
    {% endif %}
 
    {% comment %} Render an individual product {% endcomment %}
    {%- comment -%}DIGIOH-OPTION: change to a different snippet to render item if desired {%- endcomment -%}

    <li class="grid__item">
    {% render 'card-product-variant', card_product: product, variant: variant, show_quick_add: add_to_cart %}
    </li>

    {%- comment -%}
    ************************************
    SUB SECTION: Check New Row
    ************************************
    {%- endcomment -%}
  
    {% assign products_rendered_count = products_rendered_count | plus: 1 %} {% comment %} Increase rendered count {% endcomment %}
    {% assign products_rendered_in_row = products_rendered_in_row | plus: 1 %} {% comment %} Increase rendered count {% endcomment %}

    
    {% comment %} Determine if we are at the max products to display {% endcomment %}
    {%if products_rendered_count >= max_products %}
      {% break %}
    {% endif %}

    {% comment %} Determine if we need to start a new row {% endcomment %}
    {% assign need_new_row = false %}
    {% if current_row == 1 and show_hero == true %}
       {% assign need_new_row = true %}
    {% endif %}
    {% if products_rendered_in_row >= rowlen %}
       {% assign need_new_row = true %}
    {% endif %}
    
    {% if need_new_row == true %}
      </ul>
      <ul id="product-grid" class="grid product-grid grid--2-col-tablet-down grid--3-col-desktop" style="justify-content: center;" >
      {% assign products_rendered_in_row = 0 %} {% assign current_row = current_row | plus: 1 %} {% assign need_new_row = false %}  {% comment %} reset for new row {% endcomment %}
    {% endif %}

    {%- comment -%}
    ************************************
    END SUB SECTION: Check New Row
    ************************************
    {%- endcomment -%}
    
  {%- endfor -%}

  </ul>
</div>
  
{%- comment -%}
************************************
END SECTION: Display Recommended Products
************************************
{%- endcomment -%}
 