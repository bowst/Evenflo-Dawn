

{% assign products_to_show= section.settings.popularQuestionRange%}

<div class="popular-question-block" id="popularQuestionBlock" data-products-to-show="{{ products_to_show }}">
			<div class="popular-content-wrapper page-width">
				<div class="heading center">
					<h2>{{ section.settings.popularQuestionTitle }}</h2>
				</div>
				<div class="popular-card-wrapper">
					  <!-- Loader -->
            <div id="loader" class="loader" style="display: none;"></div>
				
				</div>
			</div>
		</div>

<script>


function fetchProductsData() {
  const loader = document.getElementById('loader');
  const container = document.querySelector('.popular-card-wrapper');
  const popularQuestionBlock = document.getElementById('popularQuestionBlock');
  let blocksToShow = popularQuestionBlock ? popularQuestionBlock.dataset.productsToShow : 3;

  // Show the loader
  if (loader) {
    loader.style.display = 'block';
  }

  fetch(evenFloFAQURL + 'faqs/popular')
    .then(response => response.json())
    .then(data => {
      if (container) {
        container.innerHTML = "";  // Clear existing content

        data.slice(0, blocksToShow).forEach((product) => {
          const popularCard = document.createElement('div');
          popularCard.classList.add('popular-card');

          let productsContent = "";
          let categories = [];
          let categoriesHtml = "";

          product?.products.forEach((nestedProduct) => { 
            productsContent += `<span>${nestedProduct?.name}</span>`;
            categories[nestedProduct?.category?.id] = nestedProduct?.category?.category_name;
          });

          const uniqueCategoriesArray = categories?.filter((value, index, self) => self.indexOf(value) === index);
          uniqueCategoriesArray?.forEach((category, id) => {
            categoriesHtml += `<a href="https://abc.com/${category}">${category}</a>`;
          });

          popularCard.innerHTML = `
           <div id="loader" class="loader" style="display: none;"></div>
            <div class="heading">
              <h3>${product?.products[0]?.name}</h3>
              <h2>${product.question}</h2>
              <div class="description-wrapper">
                <p>${productsContent}</p>
                <button>
                  <span>Show more</span>
                  <svg aria-hidden="true" focusable="false" class="icon icon-caret" viewBox="0 0 10 6">
                    <path fill-rule="evenodd" clip-rule="evenodd" d="M9.354.646a.5.5 0 00-.708 0L5 4.293 1.354.646a.5.5 0 00-.708.708l4 4a.5.5 0 00.708 0l4-4a.5.5 0 000-.708z" fill="currentColor"></path>
                  </svg>
                </button>
              </div>
            </div>
            <div class="card-content">
              <div class="card-detail-wrapper">
                <p>${product.answer}</p>
                <div class="card-content-link">
                  <a href="">Read Answer</a>
                </div>
              </div>
              <div class="card-link-wrapper">
                ${categoriesHtml}
              </div>
            </div>
          `;
          container.appendChild(popularCard);
        });
      } else {
        console.error('Popular card wrapper container not found');
      }
    })
    .catch(error => {
      console.error('Error fetching products:', error);
    })
    .finally(() => {
      // Hide the loader
      if (loader) {
        loader.style.display = 'none';
      }
    });
}

document.addEventListener('shopify:section:load', (event) => { 
  const sectionId = event?.detail?.sectionId;
  if (sectionId.includes('evenflo_faq_popular_question')) {
    fetchProductsData();
  } 
});

document.addEventListener('DOMContentLoaded', () => {
  fetchProductsData();
});


document.addEventListener('shopify:section:load', (event) => { 
  const sectionId = event?.detail?.sectionId;
  if (sectionId.includes('evenflo_faq_popular_question')) {
    fetchProductsData();
  } 

});

document.addEventListener('DOMContentLoaded', () => {
 
  fetchProductsData();
});





 
    </script>







{% schema %}
{
  "name": "EvenFlo FAQ Popular",
  "tag": "section",
  "class": "popularQuestion",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "text",
      "id": "popularQuestionTitle",
      "label": "Popular Question Title",
      "default":"Popular Questions"
    },
    {
        "type": "range",
        "id": "popularQuestionRange",
        "label": "Number of questions to show",
        "default":3,
        "min": 1,
        "max": 3,
        "step": 1
      }
  ],
  "presets": [
    {
      "name": "EvenFlo FAQ Popular",
      "blocks": [
        
      ]
    }
  ]
  
}
{% endschema %}