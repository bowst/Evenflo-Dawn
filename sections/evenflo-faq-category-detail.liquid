{{ 'section-evenflo-search.css' | asset_url | stylesheet_tag }}

{% comment %} Class override in this section {% endcomment %}
<style>

  .help-articles-block {
    background: #fff;
  }
  .search-listing-header2 {
    display: flex;
    justify-content: space-between;
  }
</style>


{% assign products_to_show = section.settings.categoryRelatedRange %}

<div class="help-articles-block">
  <div class="help-articles-content page-width center"> 
    <div class="help-article-search-wrapper">
      <h1 id="productName"></h1>
    </div>
  </div>
</div>

<div class="popular-question-block" id="categoryRelatedBlock" data-products-to-show="{{ products_to_show }}">
  <div class="popular-content-wrapper page-width">
    <div class="heading center">
      <h2 id="popularQuestionHeading">{{ section.settings.categoryRelatedTitle }}</h2>
    </div>
    <div class="popular-card-wrapper" id="popularCards"></div>
  </div>
</div>

<div class="page-width"> 
  <div class="search-listing-wrapper">
    <div class="search-listing-header2">
      <div class="search-selector">
        <select id="selectTopic" onchange="handleDropDownChange(event)"></select>
      </div>
      <div class="search-input">
        <input id="searchFAQ" type="text" placeholder="search" oninput="debouncedSearch(event)" />
      </div>
    </div>
    <div class="search-listing-body" id="searchListigBody" data-search-blocks-to-show="8">
      {% comment %} TO be displayed through javascript {% endcomment %}
    </div>
  </div>
</div>


<script>

  function fetchPopularProductsRelatedData(categoryID) {
    const container = document.getElementById("popularCards");
    const popularQuestionBlock = document.getElementById("popularQuestionBlock");
    let blocksToShow = popularQuestionBlock ? popularQuestionBlock.dataset.productsToShow : 3;

    if (!container) {
      console.log("Error on getting container");
      return;
    }

    container.innerHTML = ""; // Clear existing content
    const loader = appendLoader(container);
      
    //TODO: Need to change URL 
    let url = evenFloFAQURL + "products/" + categoryID;

    fetch(url)
      .then((response) => response.json())
      .then((data) => {

        //Hiding Popular questions heading
        if (Array.isArray(data?.related_popular_faqs) && data?.related_popular_faqs?.length == 0){
          document.getElementById('popularQuestionHeading').style.display ="none";
        }

        data?.related_popular_faqs?.slice(0, blocksToShow).forEach((faq) => {

        const popularCard = createPopularCardDivElement("popular-card");

        const faqsContent = getFAQContent(product?.products || []);

        const tags = getTagsArray(product?.tags || []);

        const tagsHtml = getTagsHtml(tags);

        popularCard.innerHTML = setFAQBlockInnerHtml(
          product?.topic?.name || "",
          product.question,
          faqsContent,
          product.answer,
          product?.id,
          tagsHtml
        );

        container.appendChild(popularCard);
        });
      })
      .catch((error) => {
        console.error("Error fetching products:", error);
      })
      .finally(() => {
        if (loader) {
          hideLoader(loader);
          toggleAnswerBullet();
        }
      });
  }


  function fetchFAQsByProduct(categoryID, filter = "", topicsID = "") {
    const container = document.getElementById('searchListigBody');

    if (!container) {
      return;
    }

    let blocksToShow = container.dataset.searchBlocksToShow || 8;

    container.innerHTML = ""; 

    const loader = appendLoader(container);

    fetch(evenFloFAQURL + `faqs/getFilteredFaqs?filter=${filter}&page=1&page_size=${blocksToShow}&topics_id=${topicsID}&product_id=${categoryID}`)
      .then(response => response.json())
      .then(data => {

        data?.results?.forEach((faq) => {
          const popularCard = createPopularCardDivElement("popular-card");

        const faqsContent = getFAQContent(product?.products || []);

        const tags = getTagsArray(product?.tags || []);

        const tagsHtml = getTagsHtml(tags);

        popularCard.innerHTML = setFAQBlockInnerHtml(
          product?.topic?.name || "",
          product.question,
          faqsContent,
          product.answer,
          product?.id,
          tagsHtml
        );

        container.appendChild(popularCard);
        });
      })
      .catch(error => {
        console.error('Error fetching products:', error);
      })
      .finally(() => {
        if (loader) {
          hideLoader(loader);
         toggleAnswerBullet();
        }
      });
  }

  function handleDropDownChange(event) {
    let topicID = document.getElementById('selectTopic').value;
    let filter = document.getElementById('searchFAQ').value;
    fetchFAQsByProduct(categoryID, filter, topicID);
  }

  var categoryID = "";
  document.addEventListener('DOMContentLoaded', () => {
    const queryString = window.location.search;
    const urlParams = new URLSearchParams(queryString);

    if (urlParams.has('cat_id')) {
      let categoryID = urlParams.get('cat_id');
      fetchPopularProductsRelatedData(categoryID);
      fetchFAQsByProduct(categoryID);
      fetchTopicsByType(categoryID,true)
    } else {
      window.location.href = '/pages/evenflo-faq-portal';
    }
  });
</script>

{% schema %}
{
  "name": "EvenFlo FAQ Category",
  "tag": "section",
  "class": "categoryRelated",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "text",
      "id": "categoryRelatedTitle",
      "label": "Popular Question Title",
      "default": "Popular Questions"
    },
    {
      "type": "range",
      "id": "categoryRelatedRange",
      "label": "Number of questions to show",
      "default": 3,
      "min": 1,
      "max": 3,
      "step": 1
    }
  ],
  "presets": [
    {
      "name": "EvenFlo FAQ Category",
      "blocks": []
    }
  ]
}
{% endschema %}
