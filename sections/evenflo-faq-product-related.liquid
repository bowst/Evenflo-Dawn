{{ 'section-evenflo-collection-detail.css' | asset_url | stylesheet_tag }}

<style>
  .help-articles-block {
    background: #fff;
  }
  .search-listing-header2 {
    display: flex;
    justify-content: space-between;
  }
</style>


{% assign products_to_show = section.settings.productRelatedRange %}

<div class="help-articles-block">
  <div class="help-articles-content page-width center"> 
    <div class="help-article-search-wrapper">
      <h1 id="productName"></h1>

      <p id="productDescription"></p>

      <div class="help-article-link-wrapper" id="productLinks">
        
      </div>
    </div>
  </div>
</div>

<div class="product-page-wrapper">
<div class="popular-question-block" id="productRelatedBlock" data-faqs-to-show="{{ products_to_show }}">
  <div class="popular-content-wrapper page-width">
    <div class="heading center">
      <h2 id="popularQuestionHeading">{{ section.settings.productRelatedTitle }}</h2>
    </div>
    <div class="popular-card-wrapper ss" id="popularCards"></div>
  </div>
</div>
</div>

{% render 'faq-related-part-block' %}

{% render 'faq-load-more-block', show_topic_dropdown:true %}


<script>
  function fetchPopularProductsRelatedData(productID) {
    const container = document.getElementById("popularCards");
    const popularQuestionBlock = document.getElementById("popularQuestionBlock");
    let blocksToShow = popularQuestionBlock ? popularQuestionBlock.dataset.faqsToShow : 3;

    if (!container) {
      console.log("Error on getting container");
      return;
    }

    container.innerHTML = ""; // Clear existing content
    const loader = appendLoader(container);

    let url = evenFloFAQURL + "products/" + productID;

    fetch(url)
      .then((response) => response.json())
      .then((data) => {

      if(data?.detail && containsString(data?.detail,errorString())){
          redirectIfNoData([])
          return ""
        }

        //Will be called in faq-related-part-block
        getProductsPartsByProductID(productID)

        fetchFAQsByFilters({productID:productID});
        fetchTopicsByType(productID,true)

        document.getElementById('productName').innerHTML = data?.name;
        //Calling breadcrumb link to update the breadcrumb name
        getBreadCrumbLinks(data?.name,'product')
        document.getElementById('productDescription').innerHTML = data?.description;

        const productLinks = document.getElementById('productLinks');
        let linksHtml = ``;

        if(data?.shopify_page_handel){
          linksHtml += `<a href="/support/${data.shopify_page_handel}">Product Guide </a> | `
        }

        if (data?.english_manual_url) {
          linksHtml += `<a href="${data.english_manual_url}">Manual EN</a>`;
        }

        if (data?.spanish_manual_url) {
          linksHtml += `<a href="${data.spanish_manual_url}">Manual ES</a>`;
        }

        if (data?.french_manual_url) {
          linksHtml += `<a href="${data.french_manual_url}">Manual FR</a>`;
        }

        if (data?.warranty_certificate) {
          linksHtml += ` | <a href="${data.warranty_certificate}">Warranty</a>`;
        }

        productLinks.innerHTML = linksHtml;
        //Hiding Popular questions heading
        if (Array.isArray(data?.related_popular_faqs) && data?.related_popular_faqs?.length == 0){
          document.getElementById('popularQuestionHeading').style.display ="none";
        }

        data?.related_popular_faqs?.slice(0, blocksToShow).forEach((product) => {

        const popularCard = createPopularCardDivElement("popular-card");

        const faqsContent = getFAQContent(product?.products || []);

        const tags = getTagsArray(product?.tags || []);

        const tagsHtml = getTagsHtml(tags);

        popularCard.innerHTML = setFAQBlockInnerHtml(
          product?.topic?.name || "",
          product.question,
          faqsContent,
          product.answer,
          product?.id,
          tagsHtml
        );

        container.appendChild(popularCard);
        });
      })
      .catch((error) => {
        console.error("Error fetching products:", error);
        redirectIfNoData([])
      })
      .finally(() => {
        if (loader) {
          hideLoader(loader);
          toggleAnswerBullet();
        }
      });
  }


  document.addEventListener('DOMContentLoaded', () => {
    const queryString = window.location.search;
    const urlParams = new URLSearchParams(queryString);

    if (urlParams.has('pid')) {
      productID = urlParams.get('pid');
      fetchPopularProductsRelatedData(productID);
    } else {
      redirectIfNoData([])
    }
  });
</script>

{% schema %}
{
  "name": "EvenFlo FAQ ProdRel",
  "tag": "section",
  "class": "productRelated",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "text",
      "id": "productRelatedTitle",
      "label": "Popular Question Title",
      "default": "Popular Questions"
    },
    {
      "type": "range",
      "id": "productRelatedRange",
      "label": "Number of questions to show",
      "default": 3,
      "min": 1,
      "max": 3,
      "step": 1
    }
  ],
  "presets": [
    {
      "name": "EvenFlo FAQ ProdRel",
      "blocks": []
    }
  ]
}
{% endschema %}
