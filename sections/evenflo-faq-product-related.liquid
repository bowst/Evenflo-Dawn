{{ 'section-evenflo-search.css' | asset_url | stylesheet_tag }}

<style>
  .help-articles-block {
    background: #fff;
}
.search-listing-header2{
  display: flex;
  justify-content: space-between;
}
</style>

{% assign products_to_show= section.settings.productRelatedRange %}

<div class="help-articles-block">
  <div class="help-articles-content page-width center"> 
      <div class="help-article-search-wrapper">
    
          <h1 id="productName"> </h1>
          <div class="help-article-link-wrapper" id="productLinks">
                 
          </div>
      </div> 
    
    
  </div>
</div>


<div class="popular-question-block" id="productRelatedBlock" data-products-to-show="{{ products_to_show }}">
  <div class="popular-content-wrapper page-width">
    <div class="heading center">
      <h2>{{ section.settings.productRelatedTitle }}</h2>
    </div>
    <div class="popular-card-wrapper" id="popularCards"></div>
  </div>
</div>

<div class="page-width center"> 
<div class="search-listing-wrapper">
  
  <div class="search-listing-header2">
    <div class="search-selector">
      <select>
        <option selected="" value="Select Product">Select Product</option>
        <option value="volvo">Volvo</option>
        <option value="saab">Saab</option>
        <option value="mercedes">Mercedes</option>
        <option value="audi">Audi</option>
      </select>
    </div>
    <div class="search-selector">
      <select>
        <option selected="" value="Select Topic">Select Topic</option>
        <option value="volvo">Volvo</option>
        <option value="saab">Saab</option>
        <option value="mercedes">Mercedes</option>
        <option value="audi">Audi</option>
      </select>
    </div>
  </div>

  <div class="search-listing-body" id="searchListigBody" data-search-blocks-to-show="8">
    {% comment %} TO be displayed through javascript {% endcomment %}
  </div>
</div>
</div>

<script>
function fetchPopularProductsRelatedData(productID) {
  const container = document.getElementById("popularCards");
  const popularQuestionBlock = document.getElementById("popularQuestionBlock");
  let blocksToShow = popularQuestionBlock ? popularQuestionBlock.dataset.productsToShow : 3;

  if (!container) {
    console.log("Error on getting container");
    return;
  }

  container.innerHTML = ""; // Clear existing content
  const loader = appendLoader(container);

  let url = evenFloFAQURL + "products/" + productID;

  fetch(url)
    .then((response) => response.json())
    .then((data) => {

      document.getElementById('productName').innerHTML=data?.name
      document.getElementById('productLinks').innerHTML=`
      <a href="${data?.english_manual_url}">Manual EN</a>
      <a href="${data?.spanish_manual_url}">Manual ES</a>
      <a href="${data?.french_manual_url}">Manual FR</a>
      `;

      data?.related_popular_faqs?.slice(0, blocksToShow).forEach((faqs) => {
        const popularCard = document.createElement("div");
        popularCard.classList.add("popular-card");

        let productsContent = "";
        let categories = [];
        let categoriesHtml = "";

        faqs?.products.forEach((nestedProduct) => {
          productsContent += `<span>${nestedProduct?.name}</span>`;
        });

        faqs?.tags.forEach((tag) => {
          categories[tag?.id] = tag?.name;
        });

        const uniqueCategoriesArray = categories?.filter(
          (value, index, self) => self.indexOf(value) === index
        );
        uniqueCategoriesArray?.forEach((category, id) => {
          categoriesHtml += `<a href="https://abc.com/${category}">${category}</a>`;
        });

        popularCard.innerHTML = `
          <div class="heading">
            <h3>${faqs?.products[0]?.name}</h3>
            <h2>${faqs.question}</h2>
            <div class="description-wrapper">
              <p>${productsContent}</p>
              <button>
                <span>Show more</span>
                <svg aria-hidden="true" focusable="false" class="icon icon-caret" viewBox="0 0 10 6">
                  <path fill-rule="evenodd" clip-rule="evenodd" d="M9.354.646a.5.5 0 00-.708 0L5 4.293 1.354.646a.5.5 0 00-.708.708l4 4a.5.5 0 00.708 0l4-4a.5.5 0 000-.708z" fill="currentColor"></path>
                </svg>
              </button>
            </div>
          </div>
          <div class="card-content">
            <div class="card-detail-wrapper">
              <p>${faqs.answer}</p>
              <div class="card-content-link">
                <a href="/pages/evenflo-faq-answer?qid=${faqs?.id}">Read Answer</a>
              </div>
            </div>
            <div class="card-link-wrapper">
              ${categoriesHtml}
            </div>
          </div>
        `;
        container.appendChild(popularCard);
      });
    })
    .catch((error) => {
      console.error("Error fetching products:", error);
    })
    .finally(() => {
      if (loader) {
        hideLoader(loader);
        toggleAnswerText();
      }
    });
}

function fetchFAQsByProduct(productID) {
  const container = document.getElementById('searchListigBody');
  if (!container) {
    return;
  }
  let blocksToShow = container.dataset.searchBlocksToShow || 8;

  container.innerHTML = ""; // Clear existing content
  const loader = appendLoader(container);

  fetch(evenFloFAQURL + 'faqs/product/'+productID)
    .then(response => response.json())
    .then(data => {
      console.log('data', data);

      data?.forEach((faq) => {
        const searchCard = document.createElement('div');
        searchCard.classList.add('search-card');

        let faqsContent = "";
        let categories = [];
        let categoriesHtml = "";


        faq?.products.forEach((nestedProduct) => { 
          faqsContent += `<span>${nestedProduct?.name}</span>`;
            categories[nestedProduct?.category?.id] = nestedProduct?.category?.category_name;
          });

          const uniqueCategoriesArray = categories?.filter((value, index, self) => self.indexOf(value) === index);
          uniqueCategoriesArray?.forEach((category, id) => {
            categoriesHtml += `<a href="https://abc.com/${category}">${category}</a>`;
          });


        searchCard.innerHTML = `
          <div class="heading">
            <h3>${faq?.topic?.name || "N/A"}</h3>
            <h2>${faq.question}</h2>
            <div class="description-wrapper">
              <p>${faqsContent}</p>
              <button>
                <span>Show more</span>
                <svg aria-hidden="true" focusable="false" class="icon icon-caret" viewBox="0 0 10 6">
                  <path fill-rule="evenodd" clip-rule="evenodd" d="M9.354.646a.5.5 0 00-.708 0L5 4.293 1.354.646a.5.5 0 00-.708.708l4 4a.5.5 0 00.708 0l4-4a.5.5 0 000-.708z" fill="currentColor"></path>
                </svg>
              </button>
            </div>
          </div>
          <div class="card-content">
            <div class="card-detail-wrapper">
              <p>${faq.answer}</p>
            </div>
            <div class="card-link-wrapper">
              ${categoriesHtml}
            </div>
          </div>
        `;
        container.appendChild(searchCard);
      });
    })
    .catch(error => {
      console.error('Error fetching products:', error);
    })
    .finally(() => {
      if (loader) {
        hideLoader(loader);
        toggleAnswerText();
      }
    });
}

document.addEventListener('DOMContentLoaded', () => {
  const queryString = window.location.search;
  const urlParams = new URLSearchParams(queryString);

  if (urlParams.has('pid')) {
    let productID = urlParams.get('pid');
    fetchPopularProductsRelatedData(productID);
    fetchFAQsByProduct(productID)
  } else {
    window.location.href = '/pages/evenflo-faq-portal';
  }
});
</script>

{% schema %}
{
  "name": "EvenFlo FAQ ProdRel",
  "tag": "section",
  "class": "productRelated",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "text",
      "id": "productRelatedTitle",
      "label": "Popular Question Title",
      "default": "Popular Questions"
    },
    {
      "type": "range",
      "id": "productRelatedRange",
      "label": "Number of questions to show",
      "default": 3,
      "min": 1,
      "max": 3,
      "step": 1
    }
  ],
  "presets": [
    {
      "name": "EvenFlo FAQ ProdRel",
      "blocks": []
    }
  ]
}
{% endschema %}
