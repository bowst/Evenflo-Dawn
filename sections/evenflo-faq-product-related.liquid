{{ 'section-evenflo-search.css' | asset_url | stylesheet_tag }}

<style>
  .help-articles-block {
    background: #fff;
  }
  .search-listing-header2 {
    display: flex;
    justify-content: space-between;
  }
</style>

{% assign by_all_prod = all_products['7678864556188'].id %}
{% comment %} {% assign by_all_prod = all_products['active-infant-carrier-support'].id %} {% endcomment %}

{% assign product_found = false %}

{% for product in collections.all.products %}
  {% if product.id == 7678864556188 %}
    {% assign product_found = true %}
    {% assign shopify_product = product %}
    {% break %}
  {% endif %}
{% endfor %}

{% if product_found %}
  <h2>Product Data:</h2>
  <ul>
    <li><strong>Title:z</strong> {{ shopify_product.title }}</li>
    <li><strong>Description:</strong> {{ shopify_product.description }}</li>
    <li><strong>Price:</strong> {{ shopify_product.price | money }}</li>
    <li><strong>SKU:</strong> {{ shopify_product.sku }}</li>
    <li><strong>Vendor:</strong> {{ shopify_product.vendor }}</li>
    <li><strong>Type:</strong> {{ shopify_product.product_type }}</li>
    <li><strong>Handle:</strong> {{ shopify_product.handle }}</li>
    <li><strong>Available:</strong> {{ shopify_product.available }}</li>
    <li><strong>Tags:</strong> {{ shopify_product.tags | join: ', ' }}</li>
   
  </ul>
{% else %}
  <p>Product not found.</p>
{% endif %}

{% assign products_to_show = section.settings.productRelatedRange %}

<div class="help-articles-block">
  <div class="help-articles-content page-width center"> 
    <div class="help-article-search-wrapper">
      <h1 id="productName"></h1>
      {{by_all_prod}}erwww
      <div class="help-article-link-wrapper" id="productLinks">
        
      </div>
    </div>
  </div>
</div>

<div class="popular-question-block" id="productRelatedBlock" data-products-to-show="{{ products_to_show }}">
  <div class="popular-content-wrapper page-width">
    <div class="heading center">
      <h2>{{ section.settings.productRelatedTitle }}</h2>
    </div>
    <div class="popular-card-wrapper" id="popularCards"></div>
  </div>
</div>

<div class="page-width center"> 
  <div class="search-listing-wrapper">
    <div class="search-listing-header2">
      <div class="search-selector">
        <select id="selectTopic" onchange="handleDropDownChange(event)"></select>
      </div>
      <div class="search-input">
        <input id="searchFAQ" type="text" placeholder="query" oninput="debouncedSearch(event)" />
      </div>
    </div>
    <div class="search-listing-body" id="searchListigBody" data-search-blocks-to-show="8">
      {% comment %} TO be displayed through javascript {% endcomment %}
    </div>
  </div>
</div>

{% assign product = all_products[productId] %}
<script>
  var productHandle = "{{ product.handle }}";
</script>

<script>
  function fetchPopularProductsRelatedData(productID) {
    const container = document.getElementById("popularCards");
    const popularQuestionBlock = document.getElementById("popularQuestionBlock");
    let blocksToShow = popularQuestionBlock ? popularQuestionBlock.dataset.productsToShow : 3;

    if (!container) {
      console.log("Error on getting container");
      return;
    }

    container.innerHTML = ""; // Clear existing content
    const loader = appendLoader(container);

    let url = evenFloFAQURL + "products/" + productID;

    fetch(url)
      .then((response) => response.json())
      .then((data) => {

       const productId = data?.shopify_id;

       fetchProductHandle(productId)
 
       //const productHandle=""

        document.getElementById('productName').innerHTML = data?.name;
        document.getElementById('productLinks').innerHTML = `
          <a href="/support/${productId}">Product Guide</a>
          <a href="${data?.english_manual_url}">Manual EN</a>
          <a href="${data?.spanish_manual_url}">Manual ES</a>
          <a href="${data?.french_manual_url}">Manual FR</a>
        `;

        data?.related_popular_faqs?.slice(0, blocksToShow).forEach((faq) => {
          const popularCard = document.createElement("div");
          popularCard.classList.add("popular-card");

          let faqContent = "";
          let tags = [];
          let tagsHtml = "";

          faq?.products.forEach((nestedProduct) => {
            faqContent += `<span>${nestedProduct?.name}</span>`;
          });

          faq?.tags.forEach((tag) => {
            tags[tag?.id] = tag?.name;
          });

          const uniquetagsArray = tags?.filter(
            (value, index, self) => self.indexOf(value) === index
          );
          uniquetagsArray?.forEach((category, id) => {
            tagsHtml += `<a href="https://abc.com/${category}">${category}</a>`;
          });

          popularCard.innerHTML = `
            <div class="heading">
              <h3>${faq?.products[0]?.name}</h3>
              <h2>${faq.question}</h2>
              <div class="description-wrapper">
                <p>${faqContent}</p>
                <button>
                  <span>Show more</span>
                  <svg aria-hidden="true" focusable="false" class="icon icon-caret" viewBox="0 0 10 6">
                    <path fill-rule="evenodd" clip-rule="evenodd" d="M9.354.646a.5.5 0 00-.708 0L5 4.293 1.354.646a.5.5 0 00-.708.708l4 4a.5.5 0 00.708 0l4-4a.5.5 0 000-.708z" fill="currentColor"></path>
                  </svg>
                </button>
              </div>
            </div>
            <div class="card-content">
              <div class="card-detail-wrapper">
                <p>${faq.answer}</p>
                <div class="card-content-link">
                  <a href="/pages/evenflo-faq-answer?qid=${faq?.id}">Read Answer</a>
                </div>
              </div>
              <div class="card-link-wrapper">
                ${tagsHtml}
              </div>
            </div>
          `;
          container.appendChild(popularCard);
        });
      })
      .catch((error) => {
        console.error("Error fetching products:", error);
      })
      .finally(() => {
        if (loader) {
          hideLoader(loader);
          toggleAnswerText();
        }
      });
  }

  function fetchProductHandle(productID) {
  const url = `/products/${productID}.js`; // Adjust endpoint if necessary

  return fetch(url)
    .then(response => {
      if (!response.ok) {
        throw new Error(`Network response was not ok: ${response.statusText}`);
      }
      return response.json();
    })
    .then(product => product.handle)
    .catch(error => {
      console.error('Error fetching product handle:', error);
      return null;
    });
}



  function fetchFAQsByProduct(productID, filter = "", topicsID = "") {
    const container = document.getElementById('searchListigBody');

    if (!container) {
      return;
    }

    let blocksToShow = container.dataset.searchBlocksToShow || 8;

    container.innerHTML = ""; 

    const loader = appendLoader(container);

    fetch(evenFloFAQURL + `faqs/getFilteredFaqs?filter=${filter}&page=1&page_size=${blocksToShow}&topics_id=${topicsID}&product_id=${productID}`)
      .then(response => response.json())
      .then(data => {
        console.log('relatedFaqsData', data);

        data?.results?.forEach((faq) => {
          const searchCard = document.createElement('div');
          searchCard.classList.add('search-card');

          let faqsContent = "";
          let tags = [];
          let tagsHtml = "";

          faq?.products.forEach((nestedProduct) => {
            faqsContent += `<span>${nestedProduct?.name}</span>`;
          });

          faq?.tags.forEach((tag) => {
            tags[tag?.id] = tag?.name;
          });

          const uniquetagsArray = tags?.filter(
            (value, index, self) => self.indexOf(value) === index
          );

          uniquetagsArray?.forEach((category, id) => {
            tagsHtml += `<a href="https://abc.com/${category}">${category}</a>`;
          });

          searchCard.innerHTML = `
            <div class="heading">
              <h3>${faq?.topic?.name || ""}</h3>
              <h2>${faq.question}</h2>
              <div class="description-wrapper">
                <p>${faqsContent}</p>
                <button>
                  <span>Show more</span>
                  <svg aria-hidden="true" focusable="false" class="icon icon-caret" viewBox="0 0 10 6">
                    <path fill-rule="evenodd" clip-rule="evenodd" d="M9.354.646a.5.5 0 00-.708 0L5 4.293 1.354.646a.5.5 0 00-.708.708l4 4a.5.5 0 00.708 0l4-4a.5.5 0 000-.708z" fill="currentColor"></path>
                  </svg>
                </button>
              </div>
            </div>
            <div class="card-content">
              <div class="card-detail-wrapper">
                <p>${faq.answer}</p>
              </div>
              <div class="card-link-wrapper">
                ${tagsHtml}
              </div>
            </div>
          `;
          container.appendChild(searchCard);
        });
      })
      .catch(error => {
        console.error('Error fetching products:', error);
      })
      .finally(() => {
        if (loader) {
          hideLoader(loader);
          toggleAnswerText();
        }
      });
  }

  function handleDropDownChange(event) {
    let topicID = document.getElementById('selectTopic').value;
    let filter = document.getElementById('searchFAQ').value;
    fetchFAQsByProduct(productID, filter, topicID);
  }

  var productID = "";
  document.addEventListener('DOMContentLoaded', () => {
    const queryString = window.location.search;
    const urlParams = new URLSearchParams(queryString);

    if (urlParams.has('pid')) {
      let productID = urlParams.get('pid');
      fetchPopularProductsRelatedData(productID);
      fetchFAQsByProduct(productID);
      fetchTopicsByType(productID,true)
    } else {
      window.location.href = '/pages/evenflo-faq-portal';
    }
  });
</script>

{% schema %}
{
  "name": "EvenFlo FAQ ProdRel",
  "tag": "section",
  "class": "productRelated",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "text",
      "id": "productRelatedTitle",
      "label": "Popular Question Title",
      "default": "Popular Questions"
    },
    {
      "type": "range",
      "id": "productRelatedRange",
      "label": "Number of questions to show",
      "default": 3,
      "min": 1,
      "max": 3,
      "step": 1
    }
  ],
  "presets": [
    {
      "name": "EvenFlo FAQ ProdRel",
      "blocks": []
    }
  ]
}
{% endschema %}
