{{ 'section-evenflo-collection-detail.css' | asset_url | stylesheet_tag }}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css" />


<style>
  
        .swiper {
            width: 100%;
            height: 100%;
        }

        .swiper-slide {
            text-align: center;
            font-size: 18px;
            background: #fff;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .swiper-slide img {
            display: block;
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
</style>

<div class="product-page-wrapper">



    <div class="product-slider-block">

        <div class="page-width">
            <div class="product-slider-main-wrapper">


                <div class="product-slider-heading center" id="collectionDetail">
                 {% comment %} Content will be dynamic {% endcomment %}
                </div>
                 <div class="swiper mySwiper product-slider-wrapper" >
                    <div class="swiper-wrapper" id="productsInCollection" data-products-to-show="6">
                      {% comment %} Content will be dynamic {% endcomment %}
                    </div>
                    <div class="swiper-pagination"></div>
                    <div class="swiper-button-prev"></div>
                    <div class="swiper-button-next"></div>
                  </div>
                <div class="swiper-button-prev"></div>
    <div class="swiper-button-next"></div>
        </div>
    </div>

    <div class="popular-question-block">
				<div class="popular-content-wrapper page-width">
					<div class="popular-header">
						<div class="search-selector-wrapper">
							<div class="search-selector">
								<select id="selectProduct" onchange="handleDropDownChange(event)">
							
								</select>
							</div>
							<div class="search-selector">
								<select id="selectTopic" onchange="handleDropDownChange(event)">
							
								</select>
							</div>
						</div>
						<div class="search-input">
							<input id="searchFAQ" type="text" placeholder="query" oninput="debouncedSearch(event)"/>
						</div>
					</div>


					<div class="popular-card-wrapper" id="faqsByCollection" data-faqs-to-show="6">

					</div>

				</div>
			</div>




</div>
</div>

    <script src="https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.js"></script>

<script>


function fetchCollectionDetail(id) {
  const container = document.getElementById('collectionDetail');

  if(!container){
      return;
    }
    
   container.innerHTML = "";  // Clear existing content

   const loader = appendLoader(container)

  fetch(evenFloFAQURL + 'collection/'+id+'/')
    .then(response => response.json())
    .then(collection => {
		container.innerHTML = `
       <h1 id="collectionHeading">${collection?.name}</h1>
                    <p id="collectionDescription">${collection?.description}</p>
          `;     
      
    })
    .catch(error => {
      console.error('Error fetching collection:', error);
    })
    .finally(() => {
      // Hide the loader
      if (loader) {
        hideLoader(loader)
      }
    });
}


function fetchProductsByCollection(collectionID){
    const container = document.getElementById('productsInCollection');

    if(!container){
      return;
    }

    container.innerHTML = "";  // Clear existing content

    //const loader= appendLoader(container)

    fetch(evenFloFAQURL + `products/filterByCollection/${collectionID}`)
    .then(response => response.json())
    .then(data => {
      console.log('data',data);

      const productsBlock = document.getElementById('productsInCollection');
      const blocksToShow = productsBlock ? productsBlock.dataset.productsToShow : 6;

        data.slice(0, blocksToShow).forEach((product) => {  

          const tabCard = document.createElement('div');
          tabCard.classList.add('swiper-slide','product-card');

          tabCard.innerHTML = `
          <a href="/pages/evenflo-faq-product?pid=${product?.id}">
           <div class="product-img">
              <img
                src=${product?.image}
                alt="tab-img"
              />
            </div>
            <div class="product-title">
              <h4>${product?.name}</h4>
            </div>
            </a>
          `;

          container.appendChild(tabCard);

        });
        var swiper = new Swiper(".mySwiper", {
            loop: true,
            slidesPerView: 4,
            spaceBetween: 30,   
            pagination: {
                el: ".swiper-pagination",
                clickable: true,
            },
            navigation: {
                nextEl: ".swiper-button-next",
                prevEl: ".swiper-button-prev",
            },
            breakpoints: {
              320: {  // when window width is >= 320px
                slidesPerView: 1,
                spaceBetween: 10
              },
              640: {  // when window width is >= 640px
                slidesPerView: 2,
              },
              960: {  // when window width is >= 960px
                slidesPerView: 4,
              }
            }
        });
      
    })
    .catch(error => {
      console.error('Error fetching products:', error);
    })
    .finally(() => {
    
    });
}


function fetchDropDownProductsByCollection(collectionID) {
  const container = document.getElementById('selectProduct');

  if (!container) {
    return;
  }

  container.innerHTML = "";

  const defaultOption = document.createElement('option');
  defaultOption.value = ""; 
  defaultOption.textContent = "Select Product";
  container.appendChild(defaultOption);

  fetch(evenFloFAQURL + `products/filterByCollection/${collectionID}`)
    .then(response => response.json())
    .then(data => {
      console.log('productsData', data);

      data?.forEach((product) => {
        const option = document.createElement('option');
        option.value = product.id; 
        option.textContent = product.name;
        container.appendChild(option);
      });
    })
    .catch(error => {
      console.error('Error fetching products:', error);
    });
}

function fetchFAQSByCollection(collectionID,filter="",topicsID="",productID="") {
  const container = document.getElementById('faqsByCollection');

	if (!container) {
		return;
	}

	container.innerHTML = ""; // Clear existing content

  const blocksToShow = container ? container.dataset.faqsToShow : 6;

  const loader= appendLoader(container);


  fetch(evenFloFAQURL + `faqs/getFilteredFaqs?filter=${filter}&page=1&page_size=${blocksToShow}&topics_id=${topicsID}&collection_id=${collectionID}&product_id=${productID}`)
    .then(response => response.json())
    .then(data => {

    console.log('faqData',data)

        data?.results?.slice(0, blocksToShow).forEach((product) => {
          const popularCard = document.createElement('div');
          popularCard.classList.add('popular-card');

        let faqsContent = "";
				let tags = [];
				let tagsHtml = "";

				product?.products.forEach((nestedProduct) => {
					faqsContent += `<li>${nestedProduct?.name}</li>`;
				});

				product?.tags.forEach((tag) => {
					tags[tag?.id] = tag?.name;
				});

				const uniquetagsArray = tags?.filter(
					(value, index, self) => self.indexOf(value) === index
				);

				uniquetagsArray?.forEach((category, id) => {
					tagsHtml += `<a href="https://abc.com/${category}">${category}</a>`;
				});

          popularCard.innerHTML = `
           
            <div class="heading">
              <h3>${product?.topic?.name || ""}</h3>
              <h2>${product.question}</h2>
              <div class="description-wrapper">
                <ul>${faqsContent}</ul>
                <button>
                  <span>Show more</span>
                  <svg aria-hidden="true" focusable="false" class="icon icon-caret" viewBox="0 0 10 6">
                    <path fill-rule="evenodd" clip-rule="evenodd" d="M9.354.646a.5.5 0 00-.708 0L5 4.293 1.354.646a.5.5 0 00-.708.708l4 4a.5.5 0 00.708 0l4-4a.5.5 0 000-.708z" fill="currentColor"></path>
                  </svg>
                </button>
              </div>
            </div>
            <div class="card-content">
              <div class="card-detail-wrapper">
                <p>${product.answer}</p>
                <div class="card-content-link">
                  <a href="/pages/evenflo-faq-answer?qid=${product?.id}">Read Answer</a>
                </div>
              </div>
              <div class="card-link-wrapper">
                ${tagsHtml}
              </div>
            </div>
          `;
          container.appendChild(popularCard);
        });
       let descriptionWrapper = document.querySelectorAll(".description-wrapper");
        descriptionWrapper.forEach((desc, index) => {
            let bullet = desc.querySelectorAll("ul li").length;
            if (bullet > 1) {
                desc.classList.remove("description-wrapper-remove");
                console.log("bullets greater then 1");
                desc.querySelector("button").addEventListener("click", () => {
                    desc.classList.toggle("description-wrapper-show");
                })
            } else {
                console.log("bullets less then 1");
                desc.classList.add("description-wrapper-remove");
            }
        })
      
    })
    .catch(error => {
      console.error('Error fetching products:', error);
    })
    .finally(() => {
      // Hide the loader
      if (loader) {
        hideLoader(loader)
}
    });
}

function handleDropDownChange(event) {
      let topicID = document.getElementById('selectTopic').value;
      let productID = document.getElementById('selectProduct').value;
      let filter = document.getElementById('searchFAQ').value;
      fetchFAQSByCollection(collectionID, filter, topicID, productID);
    }







var collectionID=""
document.addEventListener('DOMContentLoaded', () => {
	const queryString = window.location.search;
    const urlParams = new URLSearchParams(queryString);

    if (urlParams.has('cid')) {
      collectionID = urlParams.get('cid');

		    fetchCollectionDetail(collectionID);
        fetchProductsByCollection(collectionID);
        fetchFAQSByCollection(collectionID);

        fetchTopicsByType(collectionID);
        fetchDropDownProductsByCollection(collectionID);

    } else{
		window.location.href = '/pages/evenflo-faq-portal';
	}
});


//             document.addEventListener('DOMContentLoaded', function () {
//     var swiper = new Swiper('.product-slider-wrapper', {
//         loop: true,
//         pagination: {
//             el: '.swiper-pagination',
//             clickable: true,
//         },
//         navigation: {
//             nextEl: '.swiper-button-next',
//             prevEl: '.swiper-button-prev',
//         },
//         autoplay: {
//             delay: 2500,
//             disableOnInteraction: false,
//         },
//     });
// });

</script>